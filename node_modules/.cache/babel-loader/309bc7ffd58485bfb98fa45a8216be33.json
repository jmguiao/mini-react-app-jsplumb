{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jhomarc\\\\Desktop\\\\new Courses\\\\JS Plumb\\\\last-try\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jhomarc\\\\Desktop\\\\new Courses\\\\JS Plumb\\\\last-try\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Jhomarc\\\\Desktop\\\\new Courses\\\\JS Plumb\\\\last-try\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Jhomarc\\\\Desktop\\\\new Courses\\\\JS Plumb\\\\last-try\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jhomarc\\\\Desktop\\\\new Courses\\\\JS Plumb\\\\last-try\\\\src\\\\Graph.js\";\n//import React from \"react\";\nimport * as React from \"react\";\nimport { jsPlumb } from \"jsplumb\";\nimport $ from \"jquery\"; //import { v4 as uuidv4 } from \"uuid\";\n\nvar diagram = {\n  height: \"90vh\",\n  position: \"relative\"\n};\nvar control1 = {\n  left: \"50px\",\n  top: \"50px\"\n};\nvar control2 = {\n  left: \"300px\",\n  top: \"200px\"\n}; // const control3 = {\n//   left: \"400px\",\n//   top: \"300px\",\n// };\n\nvar Graph = /*#__PURE__*/function (_React$Component) {\n  _inherits(Graph, _React$Component);\n\n  var _super = _createSuper(Graph);\n\n  function Graph() {\n    _classCallCheck(this, Graph);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var instance = jsPlumb.getInstance({});\n      instance.setContainer(\"diagram\");\n      instance.bind(\"ready\", function () {\n        instance.registerConnectionTypes({\n          \"red-connection\": {\n            paintStyle: {\n              stroke: \"blue\",\n              strokeWidth: 5\n            },\n            hoverPaintStyle: {\n              stroke: \"blue\",\n              strokeWidth: 10\n            },\n            connector: \"Flowchart\"\n          }\n        }); // task 1 adding elements on click\n\n        var id = 100;\n        instance.on(document.getElementById(\"add\"), \"click\", function (e) {\n          // alert(\"adding elements\");\n          id++;\n          var container = \"<div id='control\" + id + \"' class='control' >New Control</div>\";\n          $(\"#diagram\").append(container); // alert(id);\n\n          instance.draggable(\"control\" + id, {\n            containment: true\n          });\n          instance.addEndpoint(\"control\" + id, {\n            endpoint: \"Dot\",\n            anchor: [\"RightMiddle\"],\n            isSource: true,\n            isTarget: true,\n            maxConnections: 3,\n            connectionType: \"red-connection\"\n          });\n        }); // task 2 dragable elements\n\n        instance.draggable(\"control1\", {\n          containment: true\n        });\n        instance.draggable(\"control2\", {\n          containment: true\n        }); //instance.draggable(\"control3\", { containment: true });\n        //task 3 delete elements control\n\n        $(\"body\").on(\"contextmenu\", \"#diagram .control\", function (event) {\n          event.preventDefault();\n          window.selectedControl = $(this).attr(\"id\");\n          $(\"<div class='custom-menu'><button class='delete-control'>Delete control</button></div>\").appendTo(\"body\").css({\n            top: event.pageY + \"px\",\n            left: event.pageX + \"px\"\n          });\n        });\n        $(\"body\").on(\"click\", \".delete-control\", function (event) {\n          instance.remove(window.selectedControl);\n        }); //task 4 Connect elements visually\n\n        instance.addEndpoint(\"control1\", {\n          endpoint: \"Dot\",\n          anchor: [\"RightMiddle\"],\n          isSource: true,\n          connectionType: \"red-connection\"\n        });\n        instance.addEndpoint(\"control2\", {\n          endpoint: \"Dot\",\n          anchor: [\"LeftMiddle\"],\n          isTarget: true,\n          //task 7 connect to multiple endpoints\n          maxConnections: 3,\n          connectionType: \"red-connection\",\n          //task 8 maximum connection alert\n          onMaxConnections: function onMaxConnections(info, e) {\n            alert(\"Maximum connections reached\");\n          }\n        }); // instance.addEndpoint(\"control3\", {\n        //   endpoint: \"Dot\",\n        //   anchor: [\"RightMiddle\"],\n        //   isSource: true,\n        //   connectionType: \"red-connection\",\n        // });\n        // Task 5 delete connection\n\n        instance.bind(\"contextmenu\", function (component, event) {\n          if (component.hasClass(\"jtk-connector\")) {\n            event.preventDefault();\n            window.selectedConnection = component;\n            $(\"<div class='custom-menu'><button class='delete-connection'>Delete connection</button></div>\").appendTo(\"body\").css({\n              top: event.pageY + \"px\",\n              left: event.pageX + \"px\"\n            });\n          }\n        });\n        $(\"body\").on(\"click\", \".delete-connection\", function (event) {\n          //delete the line connection\n          instance.deleteConnection(window.selectedConnection);\n        }); //remove the created button\n\n        $(document).bind(\"click\", function (event) {\n          $(\"div.custom-menu\").remove();\n        }); //task 6 run a function upon connection established\n\n        instance.bind(\"connection\", function (info, originalEvent) {\n          alert(\"connection established\");\n        }); //delete all connection on click\n\n        instance.on(document.getElementById(\"endd\"), \"click\", function (e) {\n          alert(\"deleting connections\");\n          instance.deleteEveryConnection();\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"toolbox\",\n        class: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"endd\",\n        class: \"control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, \"Delete Connections\"), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"add\",\n        class: \"control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, \"Add elements\"))), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"col-md-9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"diagram\",\n        style: diagram,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"control1\",\n        class: \"control\",\n        style: control1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, \"Control Target\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"control2\",\n        class: \"control\",\n        style: control2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, \"Control Source\"))))));\n    }\n  }]);\n\n  return Graph;\n}(React.Component);\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/Jhomarc/Desktop/new Courses/JS Plumb/last-try/src/Graph.js"],"names":["React","jsPlumb","$","diagram","height","position","control1","left","top","control2","Graph","instance","getInstance","setContainer","bind","registerConnectionTypes","paintStyle","stroke","strokeWidth","hoverPaintStyle","connector","id","on","document","getElementById","e","container","append","draggable","containment","addEndpoint","endpoint","anchor","isSource","isTarget","maxConnections","connectionType","event","preventDefault","window","selectedControl","attr","appendTo","css","pageY","pageX","remove","onMaxConnections","info","alert","component","hasClass","selectedConnection","deleteConnection","originalEvent","deleteEveryConnection","Component"],"mappings":"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","sourcesContent":["//import React from \"react\";\nimport * as React from \"react\";\nimport { jsPlumb } from \"jsplumb\";\nimport $ from \"jquery\";\n//import { v4 as uuidv4 } from \"uuid\";\n\nconst diagram = {\n  height: \"90vh\",\n  position: \"relative\",\n};\nconst control1 = {\n  left: \"50px\",\n  top: \"50px\",\n};\nconst control2 = {\n  left: \"300px\",\n  top: \"200px\",\n};\n// const control3 = {\n//   left: \"400px\",\n//   top: \"300px\",\n// };\n\nclass Graph extends React.Component {\n  componentDidMount() {\n    const instance = jsPlumb.getInstance({});\n    instance.setContainer(\"diagram\");\n    instance.bind(\"ready\", function () {\n      instance.registerConnectionTypes({\n        \"red-connection\": {\n          paintStyle: { stroke: \"blue\", strokeWidth: 5 },\n          hoverPaintStyle: { stroke: \"blue\", strokeWidth: 10 },\n          connector: \"Flowchart\",\n        },\n      });\n\n      // task 1 adding elements on click\n      var id = 100;\n      instance.on(document.getElementById(\"add\"), \"click\", function (e) {\n        // alert(\"adding elements\");\n        id++;\n        var container =\n          \"<div id='control\" + id + \"' class='control' >New Control</div>\";\n\n        $(\"#diagram\").append(container);\n        // alert(id);\n        instance.draggable(\"control\" + id, { containment: true });\n        instance.addEndpoint(\"control\" + id, {\n          endpoint: \"Dot\",\n          anchor: [\"RightMiddle\"],\n          isSource: true,\n          isTarget: true,\n          maxConnections: 3,\n          connectionType: \"red-connection\",\n        });\n      });\n\n      // task 2 dragable elements\n      instance.draggable(\"control1\", { containment: true });\n      instance.draggable(\"control2\", { containment: true });\n      //instance.draggable(\"control3\", { containment: true });\n\n      //task 3 delete elements control\n      $(\"body\").on(\"contextmenu\", \"#diagram .control\", function (event) {\n        event.preventDefault();\n        window.selectedControl = $(this).attr(\"id\");\n        $(\n          \"<div class='custom-menu'><button class='delete-control'>Delete control</button></div>\"\n        )\n          .appendTo(\"body\")\n          .css({ top: event.pageY + \"px\", left: event.pageX + \"px\" });\n      });\n      $(\"body\").on(\"click\", \".delete-control\", function (event) {\n        instance.remove(window.selectedControl);\n      });\n\n      //task 4 Connect elements visually\n      instance.addEndpoint(\"control1\", {\n        endpoint: \"Dot\",\n        anchor: [\"RightMiddle\"],\n        isSource: true,\n        connectionType: \"red-connection\",\n      });\n      instance.addEndpoint(\"control2\", {\n        endpoint: \"Dot\",\n        anchor: [\"LeftMiddle\"],\n        isTarget: true,\n\n        //task 7 connect to multiple endpoints\n        maxConnections: 3,\n        connectionType: \"red-connection\",\n\n        //task 8 maximum connection alert\n        onMaxConnections: function (info, e) {\n          alert(\"Maximum connections reached\");\n        },\n      });\n      // instance.addEndpoint(\"control3\", {\n      //   endpoint: \"Dot\",\n      //   anchor: [\"RightMiddle\"],\n      //   isSource: true,\n      //   connectionType: \"red-connection\",\n      // });\n\n      // Task 5 delete connection\n      instance.bind(\"contextmenu\", function (component, event) {\n        if (component.hasClass(\"jtk-connector\")) {\n          event.preventDefault();\n          window.selectedConnection = component;\n          $(\n            \"<div class='custom-menu'><button class='delete-connection'>Delete connection</button></div>\"\n          )\n            .appendTo(\"body\")\n            .css({ top: event.pageY + \"px\", left: event.pageX + \"px\" });\n        }\n      });\n      $(\"body\").on(\"click\", \".delete-connection\", function (event) {\n        //delete the line connection\n        instance.deleteConnection(window.selectedConnection);\n      });\n      //remove the created button\n      $(document).bind(\"click\", function (event) {\n        $(\"div.custom-menu\").remove();\n      });\n\n      //task 6 run a function upon connection established\n      instance.bind(\"connection\", function (info, originalEvent) {\n        alert(\"connection established\");\n      });\n\n      //delete all connection on click\n      instance.on(document.getElementById(\"endd\"), \"click\", function (e) {\n        alert(\"deleting connections\");\n        instance.deleteEveryConnection();\n      });\n    });\n  }\n  componentWillUnmount() {}\n\n  render() {\n    return (\n      <React.Fragment>\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-md-3\">\n              <div id=\"toolbox\" class=\"justify-content-center\">\n                <button id=\"endd\" class=\"control\">\n                  Delete Connections\n                </button>\n                <button id=\"add\" class=\"control\">\n                  Add elements\n                </button>\n              </div>\n            </div>\n            <div class=\"col-md-9\">\n              <div id=\"diagram\" style={diagram}>\n                <div id=\"control1\" class=\"control\" style={control1}>\n                  Control Target\n                </div>\n                <div id=\"control2\" class=\"control\" style={control2}>\n                  Control Source\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}